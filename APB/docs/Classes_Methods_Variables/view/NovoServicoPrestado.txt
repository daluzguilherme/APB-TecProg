/**
 * NovoServicoPrestado
 * This class provides a GUI to save a 
 * new service finished by a barber.
 */
public class NovoServicoPrestado extends JFrame {
	NovoServicoPrestado: A better name for the class would be NewProvidedService.

	private JPanel contentPane;
	private JTextField textValor;

	/* Launch the application. */
					NovoServicoPrestado frame = new NovoServicoPrestado();
						frame: this is the NovoServicoPrestado window that will be set visible. A better name would be newNewProvidedServiceWindow.
						
	/* Public method to create the frame. */
	public NovoServicoPrestado() {
		contentPane = new JPanel();
			contentPane: this is a private JPanel type object. The name is just fine.

		JLabel lblServico = new JLabel("Servi\u00E7o:");
			lblServico: This is a JLabel object that shows the "Serviço" string to the user.
				A better name would be lblStringService. 

		JLabel lblRealizadoPor = new JLabel("Realizado por:");
			lblRealizadoPor: This is a JLabel object that shows the "Realizado por:" string to the user.
				A better name would be lblStringProvidedBy. 

		JLabel lblPreco = new JLabel("Pre\u00E7o (R$):");
			lblPreco: This is a JLabel object that shows the "R$" string to the user.
				A better name would be lblStringPrice. 

		textValor = new JTextField();
			textValor: This is a JTextField object that gets the input for the Service Price number.
				A better name would be textFieldServicePriceNumber.
			
		/* Create a combo box to put all the barber's name. */
		final JComboBox comboBoxBarbeiro = new JComboBox();
			comboBoxBarbeiro: This is a JComboBox object that shows all the barbers available to choose for the provided service.
				A better name would be comboBoxBarber.
			
		/*
		 * Some refactoring is needed here. Accessing the database direct from a
		 * view class.
		 */

		/*
		 * Getting the price value from the database to fill a text field.
		 */
		final JComboBox comboBoxServico = new JComboBox();
			comboBoxServico: This is a JComboBox object that shows all the services available to choose for the provided service.
				A better name would be comboBoxTypeOfService.
			
				Connection connection;
						  
						String[] nome = comboBoxServico.getSelectedItem()
								.toString().split(" - ");
							nome: This is a String array to split the type of service in the selected item from the comboBox.
								A better name for this would be typeOfServiceNameSplit.
							
						connection = FactoryConnection.getInstance()
								.getConnection();
							connection: This is a Connection type object that gets the instance of the FactoryConnection.
								This is going to be erased and put in its DAO class.
					
						java.sql.PreparedStatement pst1 = connection
								.prepareStatement("SELECT preco FROM tipoServico WHERE nome = \""
										+ nome[1] + "\";");
							pst1: This is a SQL PreparedStatement type object that contains the string to retrieve 
								information from the SQL database. This is going to be erased and put in its DAO class.
					
						ResultSet rs1 = pst1.executeQuery();
							rs1: This is a ResultSet type object that contains all the information of the query executed.
								This is going to be erased and put in its DAO class.
					
		/*
		 * Populating the combo box Barbeiro with all the barber's names and
		 * chair. Populating the combo box Servico with the type of the service
		 * done by the barber to the client.
		 */
	
			int cont = 0;
				count: This is an int number that counts the number of the the type of services available 
					and put is added in front of its name to a quick access. A better name would be typeOfServiceCounter.

			Connection connection = FactoryConnection.getInstance()
					.getConnection();
				connection: This is a Connection type object that gets the instance of the FactoryConnection.
					This is going to be erased and put in its DAO class.
					
			java.sql.PreparedStatement pst = connection
					.prepareStatement("SELECT nome, cadeira FROM barbeiro ORDER BY cadeira;");
				pst: This is a SQL PreparedStatement type object that contains the string to retrieve 
					information from the SQL database. This is going to be erased and put in its DAO class.
			
			java.sql.PreparedStatement pst2 = connection
					.prepareStatement("SELECT nome FROM tiposervico;");
				pst2: This is a SQL PreparedStatement type object that contains the string to retrieve 
					information from the SQL database. This is going to be erased and put in its DAO class.
			
			ResultSet rs = pst.executeQuery();
				rs: This is a ResultSet type object that contains all the information of the query executed.
					This is going to be erased and put in its DAO class.
					
			ResultSet rs2 = pst2.executeQuery();
				rs1: This is a ResultSet type object that contains all the information of the query executed.
					This is going to be erased and put in its DAO class.
					
				String nome = rs.getString("nome");
					nome: This is a String type variable that gets the "nome" (name of a barber)
						information in the "rs" object. This is going to be erased and put in its DAO class.
						
				String cadeira = rs.getString("cadeira");
					caidera: This is a String type variable that gets the "cadeira" (chair of the barber)
						information in the "rs" object. This is going to be erased and put in its DAO class.
						
				String nome = rs2.getString("nome");
					nome: This is a String type variable that gets the "nome" (name of a type of service)
						information in the "rs2" object. This is going to be erased and put in its DAO class.
						
		/*
		 * Add a mouse clicked event. When the Salvar Button is clicked, it
		 * takes the strings in all fields and creates a new entry in the
		 * database.
		 */
		JButton botaoSalvar = new JButton("Salvar");
			botaoSalvar: this is a button to add a new provided service. 
				A better name would be buttonRegisterNewProvidedService.
		
						String data;
							data: This is a String type variable that will store the formatted date information.
								A better name would be formatedIsoDate.
								
						Date d = new Date();
							d: This is a Date object that will get the date information from the system.
								A better name would be systemDateInformation.
								
						SimpleDateFormat sdf = new SimpleDateFormat(
								"yyyy-MM-dd");
							sdf: This is a SimpleDateFormat object that will tell what is the format of the date we need.
								A better name would be isoDateFormat.
							
						String[] nome = comboBoxServico.getSelectedItem()
								.toString().split(" - ");
							nome: This is a String array that will get the provided type of service, its number and split it.
								A better name would be selectedTypeOfServiceInformationSplit.

						String[] barbeiro = comboBoxBarbeiro.getSelectedItem()
								.toString().split(" - ");
							nome: This is a String array that will get the barber chair, its name and split it.
								A better name would be selectedBarberInformationSplit.
								
						ServicoPrestado servico_prestado = new ServicoPrestado();
							servico_prestado: This is a ServicoPrestado object that will be filled with all collected information.
								A better name would be providedService.
							
						ServicoPrestadoController servicoController = ServicoPrestadoController
								.getInstance();
							servicoController: This is a ServicoPrestadoController object that will get the current instance.
								A better name would be providedServiceController. 

		/*
		 * Add a mouse clicked event. When the LimparCampos Button is clicked,
		 * it clears all the text fields.
		 */
		JButton botaoLimparCampos = new JButton("Limpar Campos");
			botaoLimparCampos: this is a button to add a clear all information in the fields.
				A better name would be buttonClearTextFields.
				
		/*
		 * Add a mouse clicked event. When the Voltar Button is clicked, it
		 * returns the the previous window, which is CadastrarBarbeiro.
		 */
		JButton botaoVoltar = new JButton("Voltar");
			botaoVoltar: this is a button to return to the last window. A better name would be buttonReturn.
				CadastrarServicoPrestado frame = new CadastrarServicoPrestado();
					frame: this is the CadastrarServicoPrestado window that will be set visible. 
						A better name would be newRegisterProvidedServiceWindow.
					

	/**
	 * This method shows an error message.
	 * 
	 * @param informacao
	 *            A String type variable that contains the error message to be
	 *            shown to the user.
	 */
	private void mostrarMensagemDeErro(String informacao) {
	}
		mostrarMensagemDeErro: this method will show a message error if it occurs. A better name would be showErrorMessage.
		informacao: This string show the error message. A better name would be errorMessage.
}
