/**
 * GerarRecibo
 * This class provides a GUI to generate a receipt of all 
 * the services done by a barber in the current day of work.
 */

public class GerarRecibo extends JFrame {
	GerarRecibo: a better name for this class would be GenerateReceipt.	

	private JPanel contentPane;
		scrollPane: this is a private JScrollPane type object. The name is just fine.

	private JTextField textFieldDataInicial;
		textFieldDataInicial: this is a private JTextField type object. A better name would be textFieldInitialDate.

	private JTextField textFieldDataFinal;
		textFieldDataFinal: this is a private JTextField type object. A better name would be textFieldFinalDate.

	private double total = 0;
		total: a double variable to store the total to pay the barber. A better name would be totalValue.

	private String numero;
		numero: a String type variable. It receives a String value from the database. A better name would be valueFromDataBAse.

	/* 
	 * Defining some static information to be shown in the receipt. 
	 * obs.: There is no need to use static. Also, it should be used final, because they are constants.
	 */
	private static String RAZAO_SOCIAL = "BARBEARIA DO ONOFRE LTDA - ME";
		RAZAO_SOCIAL: a static String that contains a constant String value. A better name would be SOCIAL_REASON.
	
	private static String RECIBO_PAGAMENTO = "RECIBO PAGAMENTO ALUGUEL BENS MÓVEIS";
		RECIBO_PAGAMENTO: a static String that contains a constant String value. A better name would be PAYMENT_RECEIPT.

	private static String LINHA = "____________________________________________________________";
		LINHA: a static String that contains a constant String value. A better name would be SIGNATURE_LINE.

	private static String LOCAL_E_DATA = "                    Brasília - DF  ____/____/________";
		LOCAL_E_DATA: a static String that contains a constant String value. A better name would be CITY_NAME_AND_DATE.

	/**
	 * This method converts a date information to Brazilian ABNT format.
	 * 
	 * @param data
	 *            This variable carries a date information to be formated.
	 * @return databr This variable returns a date information in the Brazilian
	 *         ABNT format.
	 * @throws ParseException
	 */
	public String ConverterDataParaABNT(String data) throws ParseException {
		ConverterDataParaABNT: a method to convert dates. A better name would be ConvertDateToABNTFormat.
		data: a String parameter that carries the date to convert value. A better name would be dateToConvert.		

		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
			sdf: a SimpleDateFormat object that contains the ISO date formart. A better name would be ISODateFormat.

		Date dataISO = sdf.parse(data);
			dataISO = A Date type object to hold the date parsed. A better name would be ISODateValue.

		SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/yyyy");
			sdf2: a SimpleDateFormat object that contains the brazilian date formart. A better name would be ABNTDateFormart.

		String databr = sdf2.format(dataISO);
			databr = A Date type object to hold the date parsed. A better name would be ABNTDateValue.
	
	}

	/**
	 * This method converts a date information to Brazilian ABNT format without
	 * bars.
	 * 
	 * @param data
	 *            This variable carries a date information to be formated.
	 * @return databr This variable returns a date information in the Brazilian
	 *         ABNT format without bars.
	 * @throws ParseException
	 */
	public String ConverterDataParaABNTSemBarra(String data)
			throws ParseException {
		ConverterDataParaABNTSemBarra: a method to convert dates. A better name would be ConvertDateToABNTFormatWithoutBars.
		data: a String parameter that carries the date to convert value. A better name would be dateToConvert.		

		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
			sdf: a SimpleDateFormat object that contains the ISO date formart. A better name would be ISODateFormat.

		Date dataISO = sdf.parse(data);
			dataISO = A Date type object to hold the date parsed. A better name would be ISODateValue.

		SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MM-yyyy");
			sdf2: a SimpleDateFormat object that contains the brazilian date formart without bars. 
				A better name would be ABNTDateFormartWithoutBars.

		String databr = sdf2.format(dataISO);
			databr = A Date type object to hold the date parsed. A better name would be ABNTDateValueWithoutBars.
	}

	/**
	 * This method converts a date information to ISO format.
	 * 
	 * @param data
	 *            This variable carries a date information to be formated.
	 * @return databr This variable returns a date information in ISO format.
	 * @throws ParseException
	 */
	private String ConverterDataParaISO(String data) throws ParseException {
		ConverterDataParaISO: a method to convert dates. A better name would be ConvertDateToISOFormat.
		data: a String parameter that carries the date to convert value. A better name would be dateToConvert.		

		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
			sdf: a SimpleDateFormat object that contains the Brazilian date formart. A better name would be ABNTDateFormat.

		Date dataABNT = sdf.parse(data);
			dataABNT = A Date type object to hold the date parsed. A better name would be ABNTDateValue.

		SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
			sdf2: a SimpleDateFormat object that contains the ISO date formart. 
				A better name would be ISODateFormart.

		String dataISO = sdf2.format(dataISO);
			dataISO = A Date type object to hold the date parsed. A better name would be ISODateValue.
	}

	/* Public method to create the frame. */
		contentPane = new JPanel();

		/* Create a combo box to put barber informations. */
		final JComboBox comboBoxBarbeiros = new JComboBox();

		/* Populating the combo box with the barber informations. */
			ResultSet rs = BarbeiroController.getInstance().pesquisar();

		final MaskFormatter mascaraFormatoData = new MaskFormatter("##/##/####");
			mascaraFormatoData: a MaskFormatter object that shows how the date should be displayed.
				A better name would be dateABNTMaskFormat.
	
		JLabel lblDataDeInicio = new JLabel("Data Inicial");
			lblDataDeInicio: a JLabel object. A better name would be lblInitialDate.

		JLabel lblDataFinal = new JLabel("Data Final");
			lblDataFinal: a JLabel object. A better name would be lblFinalDate.

		/*
		 * Add a mouse clicked event. When the GerarRecibo Button is clicked, it
		 * generates a receipt with all the services informations of the day of
		 * that one barber chosen in the combo box.
		 */
		JButton btnGerarRecibo = new JButton("Gerar Recibo");
			btnGerarrecibo: this is a button to generate a receipt. A better name would be buttonGenerateReceipt.

				ReciboController reciboController = ReciboController
						.getInstance();
					reciboController: This is a ReciboController type object that gets an instance from the singleton.
						A better name would be receiptController.

						CreateDocx docx = new CreateDocx("docx");
							docx: a CreateDocx object. A better name would be docxFile.

						HashMap paramsCabeca = new HashMap();
							paramsCabeca: a HashMap object used in the document header.
								A better name would be headerParameters.

						HashMap paramsTitulo = new HashMap();
							paramsTitulo: a HashMap object used in the document title.
								A better name would be titleParameters.

						HashMap paramsValor = new HashMap();
							paramsValor: a HashMap object used in the document money value.
								A better name would be valueParameters.

						HashMap paramsTexto = new HashMap();
							paramsTexto: a HashMap object used in the document body text.
								A better name would be bodyTextParameters.

						HashMap paramsLinhaAssinatura = new HashMap();
							paramsLinhaAssinatura: a HashMap object used in the document sign line.
								A better name would be signLineParameters.

						HashMap paramsTexto4 = new HashMap();
							paramsTexto4: a HashMap object used in the constant document text RAZAO_SOCIAL.
								A better name would be socialReasonTextParameters.

						HashMap paramsQuebraLinha = new HashMap();
							paramsQuebraLinha: a HashMap object used in the document blank line.
								A better name would be blankLineParameters.

						HashMap paramsAssinaturaBarbeiro = new HashMap();
							paramsAssinaturaBarbeiro: a HashMap object used in the document text of the barber sign.
								A better name would be barberSignParameters.

						final String dataInicialIso = ConverterDataParaISO(textFieldDataInicial
								.getText());
							dataInicialIso: a final String that contains the Initial Date in the ISO format.
								A better name would be fnitialDateISO.

						final String dataFinalIso = ConverterDataParaISO(textFieldDataFinal
								.getText());
							dataFinalIso: a final String that contains the Final Date in the ISO format.
								A better name would be finalDateISO.

						String[] nome = comboBoxBarbeiros.getSelectedItem()
								.toString().split(" - ");
							nome: a String vector that contains the name of the barber and it's chair. 
								A better name would be splitBarberInformation.

						ResultSet rs = reciboController.getInstance()
								.pesquisarServicosDoBarbeiro(nome[1],
										dataInicialIso, dataFinalIso);
							rs: A ResultSet type object. It receives all the receipt information in the database.
								A better name would be receiptInformationResultSet.

							double valor = Double.parseDouble(numero);
								valor: a double variable to parse a String value. A better name would be parseValue.

						DecimalFormat decimal = new DecimalFormat("##0.00");
							decimal: a DecimalFormat object that holds the value format. 
								A better name would be decimalValueFormat.

						String dataInic = textFieldDataInicial.getText();
							dataInic: a String variable that gets the initial date from the text field.
								A better name would be initialDateFromTextField.

						String dataFin = textFieldDataFinal.getText();
							dataFin: a String variable that gets the final date from the text field.
								A better name would be finalDateFromTextField.

						String valor = ("VALOR R$ " + decimal.format(total));
							valor: a String that has the information abaout the value to add to the document.
								A better name would be documentValueInformation.

						String texto = "                    Recebi do Sr. "
								+ nome[1] + " a importância supra de R$ "
								+ (decimal.format(total)) + ", "
								+ "referente ao Aluguel do período de "
								+ dataInic + " até " + dataFin
								+ ", conforme CONTRATO de locação "
								+ "de bens móveis, firmado entre as partes.";
							texto: a String type variable that has a text with lots of informations to add to the documment.
								A better name would be documentBodyText.

						String texto2 = "                    Por ser verdade assino o presente RECIBO para"
								+ " os fins de direitos, de acordo com a lei.";
							texto2: a String type variable that has a text with informations about the barber signature 
								to add to the documment. A better name would be documentSignatureText.
							

						GerarRecibo frame = new GerarRecibo();
							frame: this is the GerarRecibo window that will be reloaded.
								A better name would be reloadGenerateReceiptWindow.

		/*
		 * Add a mouse clicked event. When the Voltar Button is clicked, it
		 * returns the the previous window, which is Administrativo.
		 */
		JButton btnVoltar = new JButton("Voltar");
			btnVoltar: this is a button to return to the last window. A better name would be buttonReturn.

				Administrativo frame = new Administrativo();
					frame: this is the Administrative window that will be set visible. A better name would be newAdministrativeWindow.

	/**
	 * This method shows an error message.
	 * 
	 * @param informacao
	 *            A String type variable that contains the error message to be
	 *            shown to the user.
	 */
	private void mostrarMensagemDeErro(String informacao) {
	}
		mostrarMensagemDeErro: this method will show a message error if it occurs. A better name would be showErrorMessage.

}
